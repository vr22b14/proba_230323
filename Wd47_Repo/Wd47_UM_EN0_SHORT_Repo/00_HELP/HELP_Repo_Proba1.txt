(1)_ Делаем локальный репозиторий на рабочем ПК
(2)_ Делаем репозиторий на GitHub
(3)_ Делаем локальный репозиторий на домашнем ПК
(4)_ Проверяем возможность связки домашнего репозитория и репозитория на GitHub (запрашивает пароль GitHub или не запрашивает).
=====
=====
=====
=====
(1)_ Создаем репозиторий на GitHub с именем <proba_230321>.
(1)_ <vr22b14/proba_230321>
.....
(2)_ Создаем на gthub репозиторий <proba_230321> для опытов (для выяснения пригодности GitHub [либо нашего сервера] для разработки технической документации).
(2)_ ссылка на этот репозиторий: https://github.com/vr22b14/pages.git
(2)_ Далее подробно по шагам на GitHub:
(2)=> Create a new repository (+New repository) (https://github.com/new)
(2)=> Create a new repository -> Repository name -> <proba_230321>
(2)=> Create a new repository -> Description (optional) -> PROBA for technical documentation
(2)=> Create a new repository -> Public
(2)=> Create a new repository -> Create repository
(2)=> Получаем ссылку на репозиторий:
https://github.com/vr22b14/proba_230321
(выполнено)
.....
(2)_ Отдельный токен для этого репозитория я не создавал.
.....
(3)_ Командой [cd <Путь к каталогу>] установливаем текущий каталог, в который будем клонировать репозиторий из GitHub. Если сразу не установить, то репозиторий будет клонироваться в текущий каталог. Путь к этому каталогу нужно смотреть в командной строке или в терминале Windows PowerShell. Для этого нужно кликнуть правой кнопкой мыши по меню [Пуск] и выбрать в контекстном меню Windows PowerShell для запуска.
(3)_ Повторимся, что командой [cd <Путь к каталогу>] установливаем текущий каталог (с помощью Windows PowerShell):
> cd C:\Users\Romanov\Documents\000_MyDocs\002_Manuals_Repo_proba
(выполнено)
.....
(3)_ Командой [git init] создаем Git-репозиторий на локальном ПК на базе папки <002_Manuals_Repo_proba>.
> git init
(3)_ git вывел сообщение:
Initialized empty Git repository in C:/Users/Romanov/Documents/000_MyDocs/002_Manuals_Repo_proba/.git/
(выполнено)
.....
.....
(5)_ СВЯЗЫВАЕМ GitHub-РЕПОЗИТОРИЙ С ЛОКАЛЬНЫМ:
(5)_ Командой [git remote add target <URL удаленного репозитория на сервере GitHub>] свяжем GitHub-репозиторий с локальным.
(5)_ Чтобы привязать репозиторий на GitHub к имени <origin> была использована команда:
> git remote add origin https://github.com/vr22b14/proba_230321
(5)_ git НЕ_выводил сообщения.
.....
(5)_ Команда, чтобы посмотреть, какие удаленные репозитории привязаны к нашему локальному репозиторию.
> git remote
(5)_ Расширенный вариант этой команды - показывает URL привязанных репозиториев.
> git remote -v
(5)_ git выведет сообщение:
origin  https://github.com/vr22b14/proba_230321 (fetch)
origin  https://github.com/vr22b14/proba_230321 (push)
.....
.....
(6)_ Команда [git status], чтобы посмотреть состояние репозитория.
> git status
(6)_ git выведет сообщение:
On branch main

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Wd47_Repo/ (красным цветом)

nothing added to commit but untracked files present (use "git add" to track)
.....
.....
(6)_ Команда [git add *.*], чтобы добавить все файлы в отслеживание. Сообщения от <git> не выводились.
> git add *.*
(6)_ Команда [git status], чтобы посмотреть состояние репозитория.
> git status
(6)_ git выведет сообщение:
On branch main

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   "Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/00_HELP/HELP_\320\270\320\275\321\201\321\202\321\200\321\203\320\272\321\206\320\270\321\217.txt"
        new file:   "Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/00_HELP/_0_\320\241\321\201\321\213\320\273\320\272\320\270.txt"
        new file:   Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/MayakovskiyVV_20230317.txt
        new file:   Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/Pic/cat_and_syringe_bmp.png
        new file:   Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/Pic/owl.png
        new file:   Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/Wd47_UM_EN0_SHORT_Repo.md
        new file:   Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/Wd47_UM_RU_SHORT_20230117.doc
        new file:   Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/Wd47_UM_RU_SHORT_20230316.doc (всё зеленым цветом и выше тоже)
.....
.....
(7)_ Команда [git commit -m "20230321_1732"], чтобы закоммитить все изменения.
> git commit -m "20230321_1732"
(7)_ git выведет сообщение:
[main (root-commit) 2a6e45e] 20230321_1732
 8 files changed, 325 insertions(+)
 create mode 100644 "Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/00_HELP/HELP_\320\270\320\275\321\201\321\202\321\200\321\203\320\272\321\206\320\270\321\217.txt"
 create mode 100644 "Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/00_HELP/_0_\320\241\321\201\321\213\320\273\320\272\320\270.txt"
 create mode 100644 Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/MayakovskiyVV_20230317.txt
 create mode 100644 Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/Pic/cat_and_syringe_bmp.png
 create mode 100644 Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/Pic/owl.png
 create mode 100644 Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/Wd47_UM_EN0_SHORT_Repo.md
 create mode 100644 Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/Wd47_UM_RU_SHORT_20230117.doc
 create mode 100644 Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/Wd47_UM_RU_SHORT_20230316.doc
 .....
 .....
(9)_ Команда [git push --all], чтобы отправить обе моих ветки (main (вместо origin у лектора), gh-pages) на <GitHub>.
> git push --all
(9)_ git выведет сообщение:
.....
git clone https://github.com/vr22b14/proba_230321
(9)_ git выведет сообщение:
Cloning into 'proba_230321'...
remote: Enumerating objects: 3, done.
remote: Counting objects: 100% (3/3), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Receiving objects: 100% (3/3), done.
.....
 .....
(9)_ Команда [git push --all], чтобы отправить обе моих ветки (main (вместо origin у лектора), gh-pages) на <GitHub>.
> git push --all
(9)_ git выведет сообщение:
.....
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/vr22b14/proba_230321'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
.....
(5)_ Заберите актуальную версию данных из удалённого репозитория при помощи команды git pull origin main.
> git pull origin main
(5)_ git выведет сообщение:
.....
remote: Enumerating objects: 3, done.
remote: Counting objects: 100% (3/3), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 628 bytes | 104.00 KiB/s, done.
From https://github.com/vr22b14/proba_230321
 * branch            main       -> FETCH_HEAD
 * [new branch]      main       -> origin/main
fatal: refusing to merge unrelated histories
.....
> git status
(5)_ git выведет сообщение:
On branch main
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    "Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/00_HELP/HELP_\320\270\320\275\321\201\321\202\321\200\321\203\320\272\321\206\320\270\321\217.txt"

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/00_HELP/HELP_Repo_Proba1.txt
        proba_230321/

no changes added to commit (use "git add" and/or "git commit -a")
.....
(7)_ Команда [git commit -m "20230323_0855"], чтобы закоммитить все изменения.
> git commit -m "20230323_0855"
(7)_ git выведет сообщение:
.....
On branch main
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    "Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/00_HELP/HELP_\320\270\320\275\321\201\321\202\321\200\321\203\320\272\321\206\320\270\321\217.txt"

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/00_HELP/HELP_Repo_Proba1.txt
        proba_230321/

no changes added to commit (use "git add" and/or "git commit -a")
.....
.....
(6)_ Команда [git add *.*], чтобы добавить все файлы в отслеживание. Сообщения от <git> не выводились.
> git add *.*
.....
(6)_ Команда [git status], чтобы посмотреть состояние репозитория.
> git status
(6)_ git выведет сообщение:
.....
On branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/00_HELP/HELP_Repo_Proba1.txt
        deleted:    "Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/00_HELP/HELP_\320\270\320\275\321\201\321\202\321\200\321\203\320\272\321\206\320\270\321\217.txt"

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/00_HELP/HELP_Repo_Proba1.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        proba_230321/
.....
(7)_ Команда [git commit -m "20230323_0901"], чтобы закоммитить все изменения.
> git commit -m "20230323_0901"
(7)_ git выведет сообщение:
.....
[main 1cd0c84] 20230323_0901
 2 files changed, 176 insertions(+), 71 deletions(-)
 create mode 100644 Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/00_HELP/HELP_Repo_Proba1.txt
 delete mode 100644 "Wd47_Repo/Wd47_UM_EN0_SHORT_Repo/00_HELP/HELP_\320\270\320\275\321\201\321\202\321\200\321\203\320\272\321\206\320\270\321\217.txt"
 .....
  .....
(9)_ Команда [git push --all], чтобы отправить обе моих ветки (main (вместо origin у лектора), gh-pages) на <GitHub>.
> git push --all
(9)_ git выведет сообщение:
.....
To https://github.com/vr22b14/proba_230321
 ! [rejected]        main -> main (non-fast-forward)
error: failed to push some refs to 'https://github.com/vr22b14/proba_230321'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
.....
(6)_ Команда [git commit -a -m "20230323_0911_Elimination of conflict"], чтобы сообщить <git>, что конфликт разрешен.
(6)_ git выведет сообщение: